# server {
#     listen 80;
#     server_name _;

#     location / {
#         proxy_pass http://127.0.0.1:5000;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;

#         # CORS
#         add_header 'Access-Control-Allow-Origin' '*' always;
#         add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
#         add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization' always;

#         if ($request_method = OPTIONS) {
#             return 204;
#         }
#     }
# }

# default.conf
# Đặt upstream ở ngoài server {}
# upstream osrm_upstream {
#     server 127.0.0.1:5000;
#     keepalive 32;
# }

# server {
#     listen 80;
#     server_name _;

#     # Preflight (OPTIONS)
#     location / {
#         if ($request_method = OPTIONS) {
#             add_header 'Access-Control-Allow-Origin' '*';
#             add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
#             add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Authorization, Accept';
#             add_header 'Access-Control-Max-Age' 86400;
#             return 204;
#         }

#         return 200 'OSRM backend is running';
#         add_header Content-Type text/plain;
#     }

#     # Forward OSRM endpoints
#     location /route/ {
#         proxy_pass http://osrm_upstream/route/;
#         proxy_http_version 1.1;
#         proxy_set_header Connection "";
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         proxy_read_timeout 300;

#         # CORS
#         add_header 'Access-Control-Allow-Origin' '*' always;
#         add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
#         add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Authorization, Accept' always;
#     }

#     location /nearest/ {
#         proxy_pass http://osrm_upstream/nearest/;
#         proxy_http_version 1.1;
#         proxy_set_header Connection "";
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         proxy_read_timeout 300;

#         # CORS
#         add_header 'Access-Control-Allow-Origin' '*' always;
#         add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
#         add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Authorization, Accept' always;
#     }

#     location /table/ {
#         proxy_pass http://osrm_upstream/table/;
#         proxy_http_version 1.1;
#         proxy_set_header Connection "";
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         proxy_read_timeout 300;

#         # CORS
#         add_header 'Access-Control-Allow-Origin' '*' always;
#         add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
#         add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Authorization, Accept' always;
#     }

#     location /match/ {
#         proxy_pass http://osrm_upstream/match/;
#         proxy_http_version 1.1;
#         proxy_set_header Connection "";
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         proxy_read_timeout 300;

#         # CORS
#         add_header 'Access-Control-Allow-Origin' '*' always;
#         add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
#         add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Authorization, Accept' always;
#     }
# }

worker_processes auto;

events {
    worker_connections 1024;
}

http {
    upstream osrm_upstream {
        server 127.0.0.1:5000;
        keepalive 32;
    }

    server {
        listen 10000;   # Render yêu cầu app bind vào $PORT -> Dockerfile sẽ ENV PORT=10000
        server_name _;

        # Health check & root
        location = / {
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Authorization, Accept' always;

            if ($request_method = OPTIONS) {
                return 204;
            }

            default_type text/plain;
            return 200 "OSRM backend is running\n";
        }

        # Proxy OSRM API endpoints
        location ~ ^/(route|nearest|table|match)/ {
            proxy_pass http://osrm_upstream;
            proxy_http_version 1.1;
            proxy_set_header Connection keep-alive;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 300;

            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Authorization, Accept' always;

            if ($request_method = OPTIONS) {
                return 204;
            }
        }
    }
}
